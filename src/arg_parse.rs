#[cfg(feature = "cli_args")]
use clap::{App, Arg, crate_version};

/// Handle CLI arguments.
#[cfg(feature = "cli_args")]
pub fn get_args() -> clap::ArgMatches<'static> {
    return App::new("TMNT Bot")
        .about("Make a TMNT logo of a Wikipedia title that you can sing to the TMNT themesong.")
        .version(crate_version!())
        .arg(Arg::with_name("Logo generator URL")
            .help("URL or file:/// path to HTML logo generator.")
            .index(1)
            .required(true)
            .default_value("./assets/tmnt.html"))
        .arg(Arg::with_name("Auth key file")
            .help("TOML file containing credentials for posting logos to social meida. See example.key.toml for guidance.")
            .long("key")
            .short("k")
            .takes_value(true)
            .default_value("~/.config/tmnt.toml"))
        .arg(Arg::with_name("Post to Twitter")
            .help("Post logo to Twitter.")
            .long("twitter")
            .short("t")
            .takes_value(false)
            .default_value("false"))
        .arg(Arg::with_name("Post to Mastodon")
            .help("Post logo to Mastodon.")
            .long("mastodon")
            .short("m")
            .takes_value(false)
            .default_value("false"))
        .arg(Arg::with_name("Append text to post")
            .help("When posting to social media, append this string.")
            .long("append")
            .short("a")
            .takes_value(true)
            .default_value(""))
        .arg(Arg::with_name("Prepend text to post")
            .help("When posting to social media, prepend this string.")
            .long("prepend")
            .short("p")
            .takes_value(true)
            .default_value(""))
        .get_matches();
}